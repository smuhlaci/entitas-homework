//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TimerTickComponent timerTick { get { return (TimerTickComponent)GetComponent(GameComponentsLookup.TimerTick); } }
    public bool hasTimerTick { get { return HasComponent(GameComponentsLookup.TimerTick); } }

    public void AddTimerTick(float newValue) {
        var index = GameComponentsLookup.TimerTick;
        var component = (TimerTickComponent)CreateComponent(index, typeof(TimerTickComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimerTick(float newValue) {
        var index = GameComponentsLookup.TimerTick;
        var component = (TimerTickComponent)CreateComponent(index, typeof(TimerTickComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimerTick() {
        RemoveComponent(GameComponentsLookup.TimerTick);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimerTick;

    public static Entitas.IMatcher<GameEntity> TimerTick {
        get {
            if (_matcherTimerTick == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TimerTick);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimerTick = matcher;
            }

            return _matcherTimerTick;
        }
    }
}
