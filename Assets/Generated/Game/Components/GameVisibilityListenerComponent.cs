//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VisibilityListenerComponent visibilityListener { get { return (VisibilityListenerComponent)GetComponent(GameComponentsLookup.VisibilityListener); } }
    public bool hasVisibilityListener { get { return HasComponent(GameComponentsLookup.VisibilityListener); } }

    public void AddVisibilityListener(System.Collections.Generic.List<IVisibilityListener> newValue) {
        var index = GameComponentsLookup.VisibilityListener;
        var component = (VisibilityListenerComponent)CreateComponent(index, typeof(VisibilityListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVisibilityListener(System.Collections.Generic.List<IVisibilityListener> newValue) {
        var index = GameComponentsLookup.VisibilityListener;
        var component = (VisibilityListenerComponent)CreateComponent(index, typeof(VisibilityListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVisibilityListener() {
        RemoveComponent(GameComponentsLookup.VisibilityListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVisibilityListener;

    public static Entitas.IMatcher<GameEntity> VisibilityListener {
        get {
            if (_matcherVisibilityListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VisibilityListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVisibilityListener = matcher;
            }

            return _matcherVisibilityListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddVisibilityListener(IVisibilityListener value) {
        var listeners = hasVisibilityListener
            ? visibilityListener.value
            : new System.Collections.Generic.List<IVisibilityListener>();
        listeners.Add(value);
        ReplaceVisibilityListener(listeners);
    }

    public void RemoveVisibilityListener(IVisibilityListener value, bool removeComponentWhenEmpty = true) {
        var listeners = visibilityListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveVisibilityListener();
        } else {
            ReplaceVisibilityListener(listeners);
        }
    }
}
